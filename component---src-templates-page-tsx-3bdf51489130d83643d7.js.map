{"version":3,"sources":["webpack:///./src/templates/page.tsx"],"names":["PageTemplate","data","markdownRemark","fields","frontmatter","excerpt","html","meta","pathname","slug","title","description","isMax","text","fallback","dangerouslySetInnerHTML","__html","query"],"mappings":"8FAAA,uHAqDeA,UApBmC,SAAC,GAAa,QAAXC,KACCC,eAA5CC,EADsD,EACtDA,OAAQC,EAD8C,EAC9CA,YAAaC,EADiC,EACjCA,QAASC,EADwB,EACxBA,KAChCC,EAAO,CACXC,SAAUL,EAAOM,KACjBC,MAAON,EAAYM,MACnBC,YAAaN,GAEf,OACE,YAAC,IAAgBE,EACf,YAAC,IAAD,KACE,YAAC,IAAD,CAAUK,MAAuB,iBAAhBT,EAAOM,MACtB,YAAC,IAAD,CAAOI,KAAMT,EAAYM,MAAOI,SAAS,OACzC,uBAEA,mBAAKC,wBAAyB,CAAEC,OAAQV,SAQ3C,IAAMW,EAAQ","file":"component---src-templates-page-tsx-3bdf51489130d83643d7.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Page from '../components/Page'\nimport Terminal from '../components/Terminal'\nimport IndexLayout from '../layouts'\nimport ASCII from 'react-rainbow-ascii'\n\ninterface PageTemplateProps {\n  data: {\n    site: {\n      siteMetadata: {\n        title: string\n        description: string\n        author: {\n          name: string\n          url: string\n        }\n      }\n    }\n    markdownRemark: {\n      html: string\n      excerpt: string\n      frontmatter: {\n        title: string\n      }\n      fields: {\n        slug: string\n      }\n    }\n  }\n}\n\nconst PageTemplate: React.FC<PageTemplateProps> = ({ data }) => {\n  const { fields, frontmatter, excerpt, html } = data.markdownRemark\n  const meta = {\n    pathname: fields.slug,\n    title: frontmatter.title,\n    description: excerpt\n  }\n  return (\n    <IndexLayout {...meta}>\n      <Page>\n        <Terminal isMax={fields.slug === '/code-demos/'}>\n          <ASCII text={frontmatter.title} fallback=\"h1\" />\n          <br />\n          {/* eslint-disable-next-line react/no-danger */}\n          <div dangerouslySetInnerHTML={{ __html: html }} />\n        </Terminal>\n      </Page>\n    </IndexLayout>\n  )\n}\nexport default PageTemplate\n\nexport const query = graphql`\n  query PageTemplateQuery($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        description\n        author {\n          name\n          url\n        }\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      excerpt\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"sourceRoot":""}