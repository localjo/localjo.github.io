{"version":3,"sources":["webpack:///./src/templates/blog.tsx"],"names":["Post","colors","ui","terminal","location","history","BlogTemplate","data","markdownRemark","frontmatter","category","date","title","author","site","siteMetadata","useEffect","quotableToolbar","Quotable","selector","isActive","blockquotes","textSelection","url","href","twitter","via","related","hashtags","activate","deactivate","text","fallback","to","toLowerCase","name","className","dangerouslySetInnerHTML","__html","html","encodeURI","email","query"],"mappings":"2RAoCMA,EAAO,mBAAH,oBAAG,CAAH,6GAMGC,IAAOC,GAAGC,SANb,iBAUFC,EAAaC,gBAAbD,SA8DOE,UA5DmC,SAAC,GAAa,IAAXC,EAAW,EAAXA,KAAW,EAC5BA,EAAKC,eAAeC,YAA9CC,EADsD,EACtDA,SAAUC,EAD4C,EAC5CA,KAAMC,EADsC,EACtCA,MAChBC,EAAWN,EAAKO,KAAKC,aAArBF,OAoBR,OAnBAG,qBAAU,WACR,IAAMC,EAAkB,IAAIC,IAAS,CACnCC,SAAU,aACVC,SAAU,CACRC,aAAa,EACbC,eAAe,GAEjBC,IAAKnB,EAASoB,KACdC,QAAS,CACPC,IAAK,cACLC,QAAS,cACTC,SAAU,CAAC,eAIf,OADAX,EAAgBY,WACT,WACLZ,EAAgBa,gBAEjB,IAED,YAAC,IAAD,KACE,YAAC,IAAD,KACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAOC,KAASrB,EAAL,QAAsBsB,SAAS,OAC1C,qBACE,YAAC,OAAD,CAAMC,GAAOvB,EAASwB,cAAd,SAAR,gBAA0DxB,EAA1D,gBAEF,uBACA,sBAAKE,GACL,yCACgBD,EADhB,OAC0BE,EAAOsB,MAEjC,uBAEA,YAACnC,EAAD,CAAMoC,UAAU,YAAYC,wBAAyB,CAAEC,OAAQ/B,EAAKC,eAAe+B,QACnF,uBACA,wDAEE,uBAFF,SAGS,IACP,iBACEf,KAAMgB,UAAU,UACJ3B,EAAO4B,MADJ,uBACgC7B,EADhC,sDAC2FR,EAASoB,KADpG,kCADjB,uCAKuCX,EAAO4B,OAThD,KAaA,qBACE,YAAC,OAAD,CAAMR,GAAOvB,EAASwB,cAAd,SAAR,gBAA0DxB,EAA1D,oBASL,IAAMgC,EAAQ","file":"component---src-templates-blog-tsx-1916c2bacc3660fc7c35.js","sourcesContent":["import React, { useEffect } from 'react'\nimport { graphql, Link } from 'gatsby'\nimport { globalHistory as history } from '@reach/router'\nimport Quotable from 'quotable-toolbar'\n\nimport Page from '../components/Page'\nimport Terminal from '../components/Terminal'\nimport IndexLayout from '../layouts'\nimport ASCII from 'react-rainbow-ascii'\nimport styled from '@emotion/styled'\nimport { colors } from '../styles/variables'\n\ninterface BlogTemplateProps {\n  data: {\n    site: {\n      siteMetadata: {\n        title: string\n        description: string\n        author: {\n          name: string\n          email: string\n        }\n      }\n    }\n    markdownRemark: {\n      html: string\n      excerpt: string\n      frontmatter: {\n        title: string\n        date: string\n        category: string\n      }\n    }\n  }\n}\n\nconst Post = styled.div`\n  position: relative;\n  .gatsby-resp-image-figcaption {\n    text-align: center;\n  }\n  #quotable-toolbar .quotable-link {\n    color: ${colors.ui.terminal} !important;\n  }\n`\n\nconst { location } = history\n\nconst BlogTemplate: React.FC<BlogTemplateProps> = ({ data }) => {\n  const { category, date, title } = data.markdownRemark.frontmatter\n  const { author } = data.site.siteMetadata\n  useEffect(() => {\n    const quotableToolbar = new Quotable({\n      selector: `.blog-post`,\n      isActive: {\n        blockquotes: true,\n        textSelection: true\n      },\n      url: location.href,\n      twitter: {\n        via: 'JoFromAkron',\n        related: 'JoFromAkron',\n        hashtags: ['quotable']\n      }\n    })\n    quotableToolbar.activate()\n    return () => {\n      quotableToolbar.deactivate()\n    }\n  }, [])\n  return (\n    <IndexLayout>\n      <Page>\n        <Terminal>\n          <ASCII text={`${category} Blog`} fallback=\"h2\" />\n          <p>\n            <Link to={`${category.toLowerCase()}-blog`}>« go back to {category} Blog index</Link>\n          </p>\n          <br />\n          <h1>{title}</h1>\n          <small>\n            Published on {date} by {author.name}\n          </small>\n          <hr />\n          {/* eslint-disable-next-line react/no-danger */}\n          <Post className=\"blog-post\" dangerouslySetInnerHTML={{ __html: data.markdownRemark.html }} />\n          <hr />\n          <p>\n            Thank you for reading this post.\n            <br />\n            Please{' '}\n            <a\n              href={encodeURI(\n                `mailto:${author.email}?subject=Your post: ${title}&body=This email is in response to your blog post: ${location.href}\\n\\nHere are my comments:\\n\\n`\n              )}\n            >\n              send an email with your comments to {author.email}\n            </a>\n            .\n          </p>\n          <p>\n            <Link to={`${category.toLowerCase()}-blog`}>« go back to {category} Blog index</Link>\n          </p>\n        </Terminal>\n      </Page>\n    </IndexLayout>\n  )\n}\nexport default BlogTemplate\n\nexport const query = graphql`\n  query BlogTemplateQuery($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        description\n        author {\n          name\n          email\n        }\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      excerpt\n      frontmatter {\n        title\n        date(formatString: \"MMMM Do, YYYY\")\n        category\n      }\n    }\n  }\n`\n"],"sourceRoot":""}