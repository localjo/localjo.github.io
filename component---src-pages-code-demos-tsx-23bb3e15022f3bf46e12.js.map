{"version":3,"sources":["webpack:///./src/pages/code-demos.tsx"],"names":["CodeDemosIndex","data","title","isMax","text","fallback","className","allMarkdownRemark","nodes","map","project","fields","frontmatter","excerpt","technologies","links","thumbnail","description","key","slug","fixed","childImageSharp","link","url","color","toLowerCase","href","target","length","to","tech","replace","query"],"mappings":"uQAwGeA,UA5DuC,SAAH,GAAiB,IAAXC,EAAI,EAAJA,KACvD,OACE,YAAC,IAAW,CAACC,MAAM,cACjB,YAAC,IAAI,KACH,YAAC,IAAQ,CAACA,MAAM,cAAcC,OAAO,GACnC,YAAC,IAAK,CAACC,KAAK,aAAaC,SAAS,OAClC,uBACA,qBAAG,0UAKH,mBAAKC,UAAU,aACZL,EAAKM,kBAAkBC,MAAMC,KAAI,SAAAC,GAAW,IACnCC,EAAiCD,EAAjCC,OAAQC,EAAyBF,EAAzBE,YAAaC,EAAYH,EAAZG,QACrBX,EAAuDU,EAAvDV,MAAOY,EAAgDF,EAAhDE,aAAcC,EAAkCH,EAAlCG,MAAOC,EAA2BJ,EAA3BI,UAAWC,EAAgBL,EAAhBK,YAC/C,OACE,mBAAKC,IAAKP,EAAOQ,KAAMb,UAAU,gBAC/B,sBAAKJ,GACL,qBAAIc,GAAa,YAAC,IAAG,CAACI,MAAOJ,EAAUK,gBAAgBD,SACvD,sBACGL,EAAMN,KAAI,SAAAa,GAAQ,IACTC,EAA2BD,EAA3BC,IAAKrB,EAAsBoB,EAAtBpB,MAAK,EAAiBoB,EAAfE,aAAK,IAAG,KAAE,EAC9B,OACE,kBAAIN,IAAKK,GACP,iBAAGjB,UAAS,SAAWkB,EAAMC,cAAiBC,KAAMH,EAAKI,OAAO,UAC7DzB,GACE,SAIVW,aAAO,EAAPA,EAASe,QAAS,GACjB,sBACE,YAAC,OAAI,CAACtB,UAAU,QAAQuB,GAAIlB,EAAOQ,MAAM,aAM/C,qBAAIF,GACJ,qBACGH,EAAaL,KAAI,SAAAqB,GAChB,IAAMX,EAAOW,EAAKC,QAAQ,eAAgB,IAAIN,cAC9C,OACE,oBAAMP,IAAKY,GACT,oBAAMxB,UAAS,SAAWa,GAASW,GAAa,kBAiBnE,IAAME,EAAQ","file":"component---src-pages-code-demos-tsx-23bb3e15022f3bf46e12.js","sourcesContent":["import * as React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Page from '../components/Page'\nimport Terminal from '../components/Terminal'\nimport IndexLayout from '../layouts'\nimport ASCII from 'react-rainbow-ascii'\nimport Img, { FixedObject } from 'gatsby-image'\n\ninterface CodeDemosIndexProps {\n  data: {\n    allMarkdownRemark: {\n      nodes: [\n        {\n          fields: {\n            slug: string\n          }\n          html: string\n          excerpt: string\n          frontmatter: {\n            title: string\n            description: string\n            date: string\n            category: string\n            technologies: string[]\n            thumbnail?: {\n              childImageSharp: {\n                fixed: FixedObject\n              }\n            }\n            links: [\n              {\n                title: string\n                url: string\n                color?: string\n              }\n            ]\n          }\n        }\n      ]\n    }\n  }\n}\n\nconst CodeDemosIndex: React.FC<CodeDemosIndexProps> = ({ data }) => {\n  return (\n    <IndexLayout title=\"Code Demos\">\n      <Page>\n        <Terminal title=\"/code-demos\" isMax={true}>\n          <ASCII text=\"Code Demos\" fallback=\"h1\" />\n          <br />\n          <p>\n            The projects on this page show a sample of my coding abilities with different technologies. I often build these to learn about a\n            new technology, or as examples to use to mentor other developers. Some of these are quite old, dating back all the way to the\n            beginning of my career. I'm happy to discuss these demos more in depth.\n          </p>\n          <div className=\"tile-list\">\n            {data.allMarkdownRemark.nodes.map(project => {\n              const { fields, frontmatter, excerpt } = project\n              const { title, technologies, links, thumbnail, description } = frontmatter\n              return (\n                <div key={fields.slug} className=\"project tile\">\n                  <h2>{title}</h2>\n                  <p>{thumbnail && <Img fixed={thumbnail.childImageSharp.fixed} />}</p>\n                  <ul>\n                    {links.map(link => {\n                      const { url, title, color = '' } = link\n                      return (\n                        <li key={url}>\n                          <a className={`badge ${color.toLowerCase()}`} href={url} target=\"_blank\">\n                            {title}\n                          </a>{' '}\n                        </li>\n                      )\n                    })}\n                    {excerpt?.length > 0 && (\n                      <li>\n                        <Link className=\"badge\" to={fields.slug}>\n                          Details\n                        </Link>\n                      </li>\n                    )}\n                  </ul>\n                  <p>{description}</p>\n                  <p>\n                    {technologies.map(tech => {\n                      const slug = tech.replace(/[^a-zA-Z\\d]/g, '').toLowerCase()\n                      return (\n                        <span key={tech}>\n                          <span className={`badge ${slug}`}>{tech}</span>{' '}\n                        </span>\n                      )\n                    })}\n                  </p>\n                </div>\n              )\n            })}\n          </div>\n        </Terminal>\n      </Page>\n    </IndexLayout>\n  )\n}\n\nexport default CodeDemosIndex\n\nexport const query = graphql`\n  query CodeDemosQuery {\n    allMarkdownRemark(sort: { fields: frontmatter___date, order: DESC }, filter: { frontmatter: { category: { eq: \"Code Demos\" } } }) {\n      nodes {\n        frontmatter {\n          title\n          description\n          featuredImage {\n            childImageSharp {\n              fluid(maxWidth: 1140) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          thumbnail {\n            childImageSharp {\n              fixed(width: 235) {\n                ...GatsbyImageSharpFixed\n              }\n            }\n          }\n          technologies\n          links {\n            title\n            url\n            color\n          }\n        }\n        excerpt(format: PLAIN)\n        fields {\n          slug\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}